---
- hosts: master
  become: yes
  vars:
    - deploy_prosisioner: 1
    - deploy_prometheus: true

  tasks:
    - name: Install Helm
      shell:
        cmd: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

    - name: Deploy local storage provisioner
      shell:
        cmd: |
          mkdir -p /mnt/fast-disks
          git clone https://github.com/kubernetes-sigs/sig-storage-local-static-provisioner.git
          kubectl apply -f sig-storage-local-static-provisioner/deployment/kubernetes/example/default_example_storageclass.yaml
          helm template ./sig-storage-local-static-provisioner/helm/provisioner --values sig-storage-local-static-provisioner/helm/provisioner/values.yaml  --name-template=provisioner  > provisioner_generated.yaml
          kubectl create -f provisioner_generated.yaml -n kube-system
      when: deploy_prosisioner|bool == true

    - copy:
        content: |
          alertmanager:
            alertmanagerSpec:
              storage: 
                volumeClaimTemplate:
                  spec:
                    storageClassName: fast-disks
                    accessModes: ["ReadWriteOnce"]
                    resources:
                      requests:
                        storage: 3Gi
          prometheus:
            prometheusSpec:
              storageSpec:
                volumeClaimTemplate:
                  spec:
                    storageClassName: fast-disks
                    accessModes: ["ReadWriteOnce"]
                    resources:
                      requests:
                        storage: 3Gi
        dest: /home/ubuntu/prom-val.yaml

    - name: Deploy Prom
      shell:
        cmd: |
          kubectl create namespace monitoring
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update
          helm install prometheus --values prom-val.yaml prometheus-community/kube-prometheus-stack -n monitoring
      when: deploy_prometheus|bool == true
