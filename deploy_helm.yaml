---
- hosts: master
  become: yes
  vars:
    - deploy_prosisioner: true
    - deploy_prometheus: true
    - deploy_rancher: true
    - deploy_vault: true
    - rancher_host: k8.master.local

  tasks:
    - name: Install Helm
      shell:
        cmd: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

    - name: Deploy local storage provisioner
      shell:
        cmd: |
          mkdir -p /mnt/fast-disks
          git clone https://github.com/kubernetes-sigs/sig-storage-local-static-provisioner.git
          kubectl apply -f sig-storage-local-static-provisioner/deployment/kubernetes/example/default_example_storageclass.yaml
          helm template ./sig-storage-local-static-provisioner/helm/provisioner --values sig-storage-local-static-provisioner/helm/provisioner/values.yaml  --name-template=provisioner  > provisioner_generated.yaml
          kubectl create -f provisioner_generated.yaml
      when: deploy_prosisioner|bool == true

    - copy:
        content: |
          alertmanager:
            alertmanagerSpec:
              storage: 
                volumeClaimTemplate:
                  spec:
                    storageClassName: fast-disks
                    accessModes: ["ReadWriteOnce"]
                    resources:
                      requests:
                        storage: 3Gi
          prometheus:
            prometheusSpec:
              storageSpec:
                volumeClaimTemplate:
                  spec:
                    storageClassName: fast-disks
                    accessModes: ["ReadWriteOnce"]
                    resources:
                      requests:
                        storage: 3Gi
        dest: /home/ubuntu/prom-val.yaml

    - name: Deploy prometheus
      shell:
        cmd: |
          kubectl create namespace monitoring
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update
          helm install prometheus --values prom-val.yaml prometheus-community/kube-prometheus-stack -n monitoring
      when: deploy_prometheus|bool == true

    - name: Deploy Rancher
      shell:
        cmd: |
          helm repo add jetstack https://charts.jetstack.io
          helm upgrade --install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --set installCRDs=true
          kubectl -n cert-manager rollout status deploy/cert-manager
          kubectl -n cert-manager rollout status deploy/cert-manager-cainjector
          kubectl -n cert-manager rollout status deploy/cert-manager-webhook
          helm repo add rancher-latest https://releases.rancher.com/server-charts/latest
          helm upgrade --install rancher rancher-latest/rancher --namespace cattle-system --create-namespace --set hostname={{ rancher_host }}
          kubectl -n cattle-system rollout status deploy/rancher
      when: deploy_rancher|bool == true

    - name: Get rancher password
      command: "kubectl get secret --namespace cattle-system bootstrap-secret -o {% raw %} go-template='{{.data.bootstrapPassword|base64decode}}{{\"\\n\"}}{% endraw %}'"
      register: rancher_password
      when: deploy_rancher|bool == true
    - debug:
        msg: "Rancher password is: {{ rancher_password.stdout }}  "

    - copy:
        content: |
          server:
            service:
              enabled: true
              type: NodePort
              nodePort: 30001
              port: 8200
              targetPort: 8200

            dataStorage:
              enabled: true
              size: 2Gi
              mountPath: "/vault/data"
              storageClass: fast-disks
              accessMode: ReadWriteOnce
        dest: /home/ubuntu/vault-values.yaml

    - name: Deploy Hashicorp Vault
      shell:
        cmd: |
          helm repo add hashicorp https://helm.releases.hashicorp.com
          helm upgrade --install vault --values vault-values.yaml hashicorp/vault --namespace vault --create-namespace
      when: deploy_vault|bool == true

